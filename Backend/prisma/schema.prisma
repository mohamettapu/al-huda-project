// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model users{
  id Int @id @default(autoincrement())
  username String @unique
password String
firstname String
lastname String
email String @unique
phone String @unique
role role @default(user)
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

}

model Teacher{
  id Int @id @default(autoincrement())
  fullName String
  phone  String @unique
  evaluations Evaluations[]
}


model Evaluations{
    id                Int       @id @default(autoincrement())
  teacherId         Int      
  phone               String 
  assessmentArea    AssessmentArea[]
  criteria          Criteria[]
  rating            Rating[]
  points            Int[]
  evaluation_No      String @default("0")
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  teacher           Teacher   @relation(fields: [teacherId], references: [id])
}


enum role{
  admin
  user
}
enum AssessmentArea {
  SUPERVISION_FEEDBACK
  ACADEMIC_PERFORMANCE
  EXTERNAL_SUPERVISION
  STUDENT_FEEDBACK
}

enum Criteria {
  INSTRUCTIONAL_STRATEGIES
  AVERAGE_CLASS_GRADES
  CLASSROOM_MANAGEMENT
  POSITIVE_STUDENT_INTERACTIONS
}

enum Rating {
  EXCEEDS_EXPECTATION
  MEETS_EXPECTATION
  NEEDS_IMPROVEMENT
  UNSATISFACTORY
}